import React from 'react'
import { Await, useParams } from "react-router-dom"
import { useNavigate } from "react-router-dom"
import { color } from '@mui/system';
import { useState } from 'react';
import { Col, Button, Row, Container, Card, Form } from 'react-bootstrap';
import { useForm } from "react-hook-form";
import axios from 'axios';
import { useEffect } from "react";
//import "./index.css"

function Index(props) {
   // const navigate=useNavigate();
    const params=useParams();
    const {id}=params;
    const [editDetails,setEditDetails] = useState({})
    const [fname, setfname] = useState("");
    const [lname, setlname] = useState("");
    const [email, setemail] = useState("");
  const [password, setpassword] = useState(""); 
  const [success,setsuccess] =useState(false);
   
    

    // const defaultValues = {
    //   fname: "",
    //   lname: "",
    //   email: "",
    //   password: "",
    // }
    // const [userList, setUserList] = useState(defaultValues)
    const [name,setName]=useState("")
     useEffect(  () => {
    fetch("http://localhost:4005/getuserbyid/"+id,{    
        method:"GET",
        crossDomain:true,
        headers:{
          "Content-Type":"application/json",
          Accept:"application/json",
          "Access-Control-Allow-Origin":"*",
        },
        
      })
      .then((res)=>res.json())
    .then((res)=>{
    const {fname,lname,email,password} = res[0]

    // //  let [{fname:fname}]=res
    // //  let [{lname:lname}]=res
    // //  let [{email:email}]=res
    // //  let [{password:password}]=res
    //  console.log(fname);
    //  console.log(lname);
    //  console.log(email);
    //  console.log(password);
    //  setfname(fname)
    //  setlname(lname)
    //  setemail(email)
    //  setpassword(password)
      // const temp={...res}   //...defaultValues,
      // console.log(temp);
    //  setUserList(temp)
    setEditDetails(res[0])
    }
      )

      // .then((response) => {
      //  console.log(response.data);
      //   let user = []

      //   if (response.data && response.data.length) {
      //     user = response.data;
      //     console.log(user);
      //   }

      //   setUserList(user)    
      //   .catch((errors) => {
      //       console.log("error occurred")
      //       // setErrorCase(errors)
    
      //       // console.log(`Error : ${errorcase}`)
      //     })
        
      // })
     }, [])
    //  console.log(userList)
    // const {firstname,lastname,nemail,npassword}=userList;
  // console.log(firstname);



    let userDetails = { fname:fname,lname:lname,email: email, password: password };
  //  console.log(userDetails)
  function handleSubmit1(e){
  
    console.log(fname,lname,email,password);
    fetch("http://localhost:4005/getuser/"+id,{
      method:"PUT",
      headers:{
        "Content-Type":"application/json",
        "Accept":"application/json",
      },
      body:JSON.stringify(userDetails),
    })
    .then((res)=>{
        console.log(res);
        window.location.href="/"
    })
    .catch((err)=>{
        console.log(err);
    })
    
        
    
  }
  
  const { register, handleSubmit, formState: { errors } } = useForm();
  
  return (
  //  <div className='mx-auto w-100'>
    <Container className='mx-auto w-100 ' >
      <Row className="d-flex justify-content-center align-items-center g-0 " >
        <Col className="g-0">
          <Card >
            <Card.Body>
              <div className="mb-3 mt-md-4">
                <h2 className="fw-bold mb-2 text-center text-uppercase ">
                  User Details  
                </h2>
                <div className="mb-3">   
                  <Form onSubmit={handleSubmit(handleSubmit1)} >                    
                   
                    <Form.Group className="mb-3" controlId="fName1" >
                      <Form.Label className="text-center">First Name</Form.Label><br></br>    
                      <Form.Control type="text" placeholder="Enter Name" 
                      //  {...register("fname", { required: true, maxLength: 10, minLength:3 })} 
                      value={editDetails.fname}
                      onChange={(e)=>setfname(e.target.value)} required
                      
                      />         
                       {/* to store values  in state.so we can access the value by e.target.value*/}
                       
                    </Form.Group>
                    {/* {errors.firstname && <p style={{color:"Red"}}>First Name should have min 3  & max 10 characters</p>} */}

                    <Form.Group className="mb-3" controlId="lName1"  >  
                      <Form.Label className="text-center">Last Name</Form.Label><br></br>
                      <Form.Control type="text" placeholder="Enter Name" 
                      // {...register("lname", { required: true, maxLength: 10, minLength:3 })} 
                      value={editDetails.lname}
                        onChange={(e)=>setlname(e.target.value)} required
                      
                      />
                    </Form.Group>
                    {/* {errors.lastName && <p style={{color:"Red"}}>Last Name should have min 3  & max 10 characters</p>} */}


                    <Form.Group className="mb-3" controlId="formBasicEmail"  >
                      <Form.Label className="text-center">
                        Email address
                      </Form.Label><br></br>
                      <Form.Control type="email" placeholder="Enter email" 
                      // {...register("email",
                      // {
                      //     required: true,
                      //     pattern: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
                      // })}
                       value={editDetails.email}
                       onChange={(e)=>setemail(e.target.value)} required
                       
                      />
                    </Form.Group>

                    {/* {errors.email && <p style={{color:"Red"}}>Please check the Email</p>} */}
                    

                    <Form.Group
                      className="mb-3"
                      controlId="formBasicPassword"
                      
                    >
                      <Form.Label>Password</Form.Label><br></br>
                      <Form.Control type="text" placeholder="Password"
                    //   {...register("password", {
                    //     required: true,
                    //     pattern: /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{5,10}$/
                    // })}
                     value={editDetails.password}
                       onChange={(e)=>setpassword(e.target.value)} required
                      
                        />

                    </Form.Group>
                   
                    {/* {errors.password && <p style={{color:"Red"}}>Password should have 1 capital,1 small letter & chars between 5 to 10</p>} */}
                    {success==true && <p style={{color:"green"}}>Signup succesful</p>}
                    
                    <Form.Group
                      className="mb-3"
                      controlId="formBasicCheckbox"
                    ></Form.Group>
                    
                    <div className="d-grid">
                      <Button variant="primary" type="submit">
                        update details
                      </Button>
                    </div>
                  </Form>
                  
                </div>
              </div>
            </Card.Body>
          </Card>
        </Col>
       
      </Row>
    </Container>
// </div>
);
 }
    





export default Index;


